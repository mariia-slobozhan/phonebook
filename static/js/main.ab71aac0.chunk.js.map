{"version":3,"sources":["Components/PhonebookForm/PhonebookForm.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","Components/PhonebookForm/PhonebookForm.js","Components/ContactItem/ContactItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","deletedContact","changeFilter","createAction","items","createReducer","fulfilled","_","payload","state","filter","loading","pending","rejected","error","action","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","concat","logger","filterValue","getContacts","getVisiableContacts","allContacts","normalizedContacts","toLowerCase","name","includes","PhonebookForm","useState","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetForm","onSubmit","preventDefault","normalizedContact","some","item","toast","className","s","label","input","type","pattern","title","required","onChange","button","ContactItem","map","tel","onClick","onDeleteContact","ContactList","Filter","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab71aac0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"PhonebookForm_label__fngiY\",\"input\":\"PhonebookForm_input__2TKyX\",\"button\":\"PhonebookForm_button__1172Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3tKF0\",\"name\":\"ContactItem_name__YO5ij\",\"tel\":\"ContactItem_tel__1sjCs\",\"button\":\"ContactItem_button__2CCkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__s_-sk\",\"input\":\"Filter_input__3ZKIV\"};","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://61981ad0164fa60017c22f69.mockapi.io/api/v1\";\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post(\"/contacts\", contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data.id;\r\n}\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as contactsAPI from \"services/contacts-api\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contscts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await contactsAPI.fetchContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contscts/addContact\",\r\n  async (contact) => {\r\n    const addContact = await contactsAPI.addContact(contact);\r\n    return addContact;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contscts/deleteContact\",\r\n  async (id) => {\r\n    const deletedContact = await contactsAPI.deleteContact(id);\r\n    return deletedContact;\r\n  }\r\n);\r\n\r\n// import {\r\n//   addContactRequest,\r\n//   addContactSuccess,\r\n//   addContactError,\r\n//   deleteContactRequest,\r\n//   deleteContactSuccess,\r\n//   deleteContactError,\r\n//   fetchContactRequest,\r\n//   fetchContactSuccess,\r\n//   fetchContactError,\r\n// } from \"./contacts-actions\";\r\n\r\n// export const fetchContacts = () => async (dispatch) => {\r\n//   dispatch(fetchContactRequest());\r\n\r\n//   try {\r\n//     const contacts = await contactsAPI.fetchContacts();\r\n//     dispatch(fetchContactSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactError(error));\r\n//   }\r\n// };\r\n\r\n// export const addContact = (contact) => async (dispatch) => {\r\n//   dispatch(addContactRequest());\r\n//   try {\r\n//     const addContact = await contactsAPI.addContact(contact);\r\n//     dispatch(addContactSuccess(addContact));\r\n//   } catch (error) {\r\n//     dispatch(addContactError(error));\r\n//   }\r\n// };\r\n\r\n// export const deleteContact = (id) => async (dispatch) => {\r\n//   dispatch(deleteContactRequest());\r\n\r\n//  try {\r\n//   const deletedContact = await contactsAPI.deleteContact(id);\r\n//   dispatch(deleteContactSuccess(deletedContact));\r\n//  } catch (error) {\r\n//    dispatch(deleteContactError(error))\r\n//  }\r\n// };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contscts/changeFilter\");\r\n\r\n// export const fetchContactRequest = createAction('contscts/fetchContactRequest');\r\n// export const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\n// export const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\n// export const addContactRequest = createAction('contscts/addContactRequest');\r\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\r\n// export const addContactError = createAction('contacts/addContactError');\r\n\r\n// export const deleteContactRequest = createAction('contscts/deleteContactRequest');\r\n// export const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\n// export const deleteContactError = createAction('contacts/deleteContactError');\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from \"./contacts-operations\";\r\nimport { changeFilter } from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.pending]: () => null,\r\n  [fetchContacts.fulfilled]: () => null,\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [addContact.pending]: () => null,\r\n  [addContact.fulfilled]: () => null,\r\n  [addContact.rejected]: (_, action) => action.payload,\r\n  [deleteContact.pending]: () => null,\r\n  [deleteContact.fulfilled]: () => null,\r\n  [deleteContact.rejected]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n","export const filterValue = (state) => state.contacts.filter;\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisiableContacts = (state) => {\r\n  const allContacts = getContacts(state);\r\n  const filter = filterValue(state);\r\n\r\n  const normalizedContacts = filter.toLowerCase();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedContacts)\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getContacts } from \"redux/contacts/contacts-selectors\";\r\nimport { addContact } from \"redux/contacts/contacts-operations\";\r\nimport { toast } from \"react-toastify\";\r\nimport s from \"./PhonebookForm.module.css\";\r\n\r\nexport default function PhonebookForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const items = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const addNewContact = (contact) => dispatch(addContact(contact));\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"phone\":\r\n        setPhone(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normalizedContact = name.toLowerCase();\r\n    if (items.some((item) => item.name.toLowerCase() === normalizedContact)) {\r\n      toast.error(`${name} is already in contact list`);\r\n      return;\r\n    }\r\n    addNewContact({ name, phone });\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Phone number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={phone}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nPhonebookForm.propTypes = {\r\n  addNewContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"redux/contacts/contacts-operations\";\r\nimport { getVisiableContacts } from \"redux/contacts/contacts-selectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem() {\r\n  const items = useSelector(getVisiableContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n\r\n  return items.map(({ name, phone, id }) => (\r\n    <li className={s.item} key={id} id={id}>\r\n      <span className={s.name}>{name}</span>\r\n      <span className={s.tel}>{phone}</span>\r\n      <button\r\n        className={s.button}\r\n        onClick={() => onDeleteContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  ));\r\n}\r\n\r\nContactItem.propTypes = {\r\n  items: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\n\r\nexport default function ContactList() {\r\n  return (\r\n    <ul>\r\n      <ContactItem />\r\n    </ul>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterValue } from \"redux/contacts/contacts-selectors\";\r\nimport { changeFilter } from \"redux/contacts/contacts-actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(filterValue);\r\n  const dispatch = useDispatch();\r\n  const onChange = (e) => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n// const mapStateToProps = (state) => ({\r\n//   value: state.contacts.filter\r\n\r\n// })\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: e => dispatch(changeFilter(e.target.value))\r\n// })\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import \"./App.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"../node_modules/react-toastify/dist/ReactToastify.css\";\r\nimport PhonebookForm from \"./Components/PhonebookForm/PhonebookForm\";\r\nimport ContactList from \"./Components/ContactsList/ContactsList\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport { fetchContacts } from \"redux/contacts/contacts-operations\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ToastContainer />\r\n      <PhonebookForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}